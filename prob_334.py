'''
Given an integer array nums, return true if there exists a
triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k].
 If no such indices exists, return false.

'''

def increasingTriplet(nums: list[int]) -> bool:
    '''
    Идём от обратного будем искать наименьшие значения в массиве. Да мы идём по
    массиву от начала и проверяем если меньше первого из тройника, то записываем
    его первым в тройничок. Если больше первого, но меньше второго, то вторым,
    а иначе число больше 2х из тройничка. мы нашли ответ и тройничок готов.
    Да если вывести ответ, то он не выдаст правильные значения переменных и
    индексов, но нам это и не нужно. Если первое значение идёт после второго
    в массиве потому что оно меньше чем то, которое было записано ранее. Но ведь
    значение меньше, чем второе существует левее второго. Поэтому на ответ не повлияет

    '''
    res = []
    # Делаем очень большие числа
    f = float('inf')
    s = float('inf')

    for n in nums:
        if n <= f:
            f = n
        elif n <= s:
            s = n
        elif n > s:
            return True
    return False



if __name__ == "__main__":
    l = [1,10,2,0,0,0]
    print(increasingTriplet(l))

